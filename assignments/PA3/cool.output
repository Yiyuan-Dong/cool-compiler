Terminals unused in grammar

   ERROR


State 9 conflicts: 1 shift/reduce
State 14 conflicts: 1 shift/reduce
State 56 conflicts: 9 shift/reduce
State 59 conflicts: 9 shift/reduce
State 63 conflicts: 9 shift/reduce
State 79 conflicts: 9 shift/reduce
State 86 conflicts: 9 shift/reduce
State 89 conflicts: 9 shift/reduce
State 90 conflicts: 9 shift/reduce
State 91 conflicts: 9 shift/reduce
State 92 conflicts: 9 shift/reduce
State 93 conflicts: 9 shift/reduce
State 94 conflicts: 9 shift/reduce
State 122 conflicts: 9 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    6 feature_list: /* empty */
    7             | feature
    8             | feature_list feature

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' ';'
   10        | OBJECTID ':' TYPEID ';'
   11        | OBJECTID ':' TYPEID ASSIGN expression ';'

   12 formal_list: /* empty */
   13            | formal
   14            | formal_list ',' formal

   15 formal: OBJECTID ':' TYPEID

   16 case_list: case
   17          | case_list case

   18 case: OBJECTID ':' TYPEID DARROW expression ';'

   19 expression_list_comma: /* empty */
   20                      | expression
   21                      | expression_list_comma ',' expression

   22 expression_list_semicolon: expression ';'
   23                          | expression_list_semicolon expression ';'

   24 partial_let: IN expression
   25            | ',' OBJECTID ':' TYPEID partial_let
   26            | ',' OBJECTID ':' TYPEID ASSIGN expression partial_let

   27 expression: OBJECTID ASSIGN expression
   28           | expression '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression '.' OBJECTID '(' expression_list_comma ')'
   30           | OBJECTID '(' expression_list_comma ')'
   31           | IF expression THEN expression ELSE expression FI
   32           | WHILE expression LOOP expression POOL
   33           | '{' expression_list_semicolon '}'
   34           | LET OBJECTID ':' TYPEID partial_let
   35           | LET OBJECTID ':' TYPEID ASSIGN expression partial_let
   36           | CASE expression OF case_list ESAC
   37           | NEW TYPEID
   38           | ISVOID expression
   39           | expression '+' expression
   40           | expression '-' expression
   41           | expression '*' expression
   42           | expression '/' expression
   43           | '~' expression
   44           | expression '<' expression
   45           | expression LE expression
   46           | expression '=' expression
   47           | NOT expression
   48           | '(' expression ')'
   49           | OBJECTID
   50           | INT_CONST
   51           | STR_CONST
   52           | BOOL_CONST


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9 28 29 30 48
')' (41) 9 28 29 30 48
'*' (42) 41
'+' (43) 39
',' (44) 14 21 25 26
'-' (45) 40
'.' (46) 28 29
'/' (47) 42
':' (58) 9 10 11 15 18 25 26 34 35
';' (59) 4 5 9 10 11 18 22 23
'<' (60) 44
'=' (61) 46
'@' (64) 28
'{' (123) 4 5 9 33
'}' (125) 4 5 9 33
'~' (126) 43
error (256)
CLASS (258) 4 5
ELSE (259) 31
FI (260) 31
IF (261) 31
IN (262) 24
INHERITS (263) 5
LET (264) 34 35
LOOP (265) 32
POOL (266) 32
THEN (267) 31
WHILE (268) 32
CASE (269) 36
ESAC (270) 36
OF (271) 36
DARROW (272) 18
NEW (273) 37
ISVOID (274) 38
STR_CONST (275) 51
INT_CONST (276) 50
BOOL_CONST (277) 52
TYPEID (278) 4 5 9 10 11 15 18 25 26 28 34 35 37
OBJECTID (279) 9 10 11 15 18 25 26 27 28 29 30 34 35 49
ASSIGN (280) 11 26 27 35
NOT (281) 47
LE (282) 45
ERROR (283)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
class_list (47)
    on left: 2 3, on right: 1 3
class (48)
    on left: 4 5, on right: 2 3
feature_list (49)
    on left: 6 7 8, on right: 4 5 8
feature (50)
    on left: 9 10 11, on right: 7 8
formal_list (51)
    on left: 12 13 14, on right: 9 14
formal (52)
    on left: 15, on right: 13 14
case_list (53)
    on left: 16 17, on right: 17 36
case (54)
    on left: 18, on right: 16 17
expression_list_comma (55)
    on left: 19 20 21, on right: 21 28 29 30
expression_list_semicolon (56)
    on left: 22 23, on right: 23 33
partial_let (57)
    on left: 24 25 26, on right: 25 26 34 35
expression (58)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
    45 46 47 48 49 50 51 52, on right: 9 11 18 20 21 22 23 24 26 27
    28 29 31 32 35 36 38 39 40 41 42 43 44 45 46 47 48


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


state 1

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


state 4

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


state 5

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 8
    '{'       shift, and go to state 9


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


state 8

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 10


state 9

    4 class: CLASS TYPEID '{' . feature_list '}' ';'

    OBJECTID  shift, and go to state 11

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 12
    feature       go to state 13


state 10

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 14


state 11

    9 feature: OBJECTID . '(' formal_list ')' ':' TYPEID '{' expression '}' ';'
   10        | OBJECTID . ':' TYPEID ';'
   11        | OBJECTID . ':' TYPEID ASSIGN expression ';'

    '('  shift, and go to state 15
    ':'  shift, and go to state 16


state 12

    4 class: CLASS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 17

    feature  go to state 18


state 13

    7 feature_list: feature .

    $default  reduce using rule 7 (feature_list)


state 14

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    OBJECTID  shift, and go to state 11

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 19
    feature       go to state 13


state 15

    9 feature: OBJECTID '(' . formal_list ')' ':' TYPEID '{' expression '}' ';'

    OBJECTID  shift, and go to state 20

    $default  reduce using rule 12 (formal_list)

    formal_list  go to state 21
    formal       go to state 22


state 16

   10 feature: OBJECTID ':' . TYPEID ';'
   11        | OBJECTID ':' . TYPEID ASSIGN expression ';'

    TYPEID  shift, and go to state 23


state 17

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 24


state 18

    8 feature_list: feature_list feature .

    $default  reduce using rule 8 (feature_list)


state 19

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 25

    feature  go to state 18


state 20

   15 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 26


state 21

    9 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expression '}' ';'
   14 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 27
    ','  shift, and go to state 28


state 22

   13 formal_list: formal .

    $default  reduce using rule 13 (formal_list)


state 23

   10 feature: OBJECTID ':' TYPEID . ';'
   11        | OBJECTID ':' TYPEID . ASSIGN expression ';'

    ASSIGN  shift, and go to state 29
    ';'     shift, and go to state 30


state 24

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


state 25

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 31


state 26

   15 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 32


state 27

    9 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expression '}' ';'

    ':'  shift, and go to state 33


state 28

   14 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 20

    formal  go to state 34


state 29

   11 feature: OBJECTID ':' TYPEID ASSIGN . expression ';'

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 49


state 30

   10 feature: OBJECTID ':' TYPEID ';' .

    $default  reduce using rule 10 (feature)


state 31

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


state 32

   15 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 15 (formal)


state 33

    9 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expression '}' ';'

    TYPEID  shift, and go to state 50


state 34

   14 formal_list: formal_list ',' formal .

    $default  reduce using rule 14 (formal_list)


state 35

   31 expression: IF . expression THEN expression ELSE expression FI

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 51


state 36

   34 expression: LET . OBJECTID ':' TYPEID partial_let
   35           | LET . OBJECTID ':' TYPEID ASSIGN expression partial_let

    OBJECTID  shift, and go to state 52


state 37

   32 expression: WHILE . expression LOOP expression POOL

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 53


state 38

   36 expression: CASE . expression OF case_list ESAC

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 54


state 39

   37 expression: NEW . TYPEID

    TYPEID  shift, and go to state 55


state 40

   38 expression: ISVOID . expression

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 56


state 41

   51 expression: STR_CONST .

    $default  reduce using rule 51 (expression)


state 42

   50 expression: INT_CONST .

    $default  reduce using rule 50 (expression)


state 43

   52 expression: BOOL_CONST .

    $default  reduce using rule 52 (expression)


state 44

   27 expression: OBJECTID . ASSIGN expression
   30           | OBJECTID . '(' expression_list_comma ')'
   49           | OBJECTID .

    ASSIGN  shift, and go to state 57
    '('     shift, and go to state 58

    $default  reduce using rule 49 (expression)


state 45

   47 expression: NOT . expression

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 59


state 46

   33 expression: '{' . expression_list_semicolon '}'

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression_list_semicolon  go to state 60
    expression                 go to state 61


state 47

   48 expression: '(' . expression ')'

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 62


state 48

   43 expression: '~' . expression

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 63


state 49

   11 feature: OBJECTID ':' TYPEID ASSIGN expression . ';'
   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    LE   shift, and go to state 64
    ';'  shift, and go to state 65
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73


state 50

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expression '}' ';'

    '{'  shift, and go to state 74


state 51

   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   31           | IF expression . THEN expression ELSE expression FI
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    THEN  shift, and go to state 75
    LE    shift, and go to state 64
    '@'   shift, and go to state 66
    '.'   shift, and go to state 67
    '+'   shift, and go to state 68
    '-'   shift, and go to state 69
    '*'   shift, and go to state 70
    '/'   shift, and go to state 71
    '<'   shift, and go to state 72
    '='   shift, and go to state 73


state 52

   34 expression: LET OBJECTID . ':' TYPEID partial_let
   35           | LET OBJECTID . ':' TYPEID ASSIGN expression partial_let

    ':'  shift, and go to state 76


state 53

   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   32           | WHILE expression . LOOP expression POOL
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    LOOP  shift, and go to state 77
    LE    shift, and go to state 64
    '@'   shift, and go to state 66
    '.'   shift, and go to state 67
    '+'   shift, and go to state 68
    '-'   shift, and go to state 69
    '*'   shift, and go to state 70
    '/'   shift, and go to state 71
    '<'   shift, and go to state 72
    '='   shift, and go to state 73


state 54

   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   36           | CASE expression . OF case_list ESAC
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    OF   shift, and go to state 78
    LE   shift, and go to state 64
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73


state 55

   37 expression: NEW TYPEID .

    $default  reduce using rule 37 (expression)


state 56

   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   38           | ISVOID expression .
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    LE   shift, and go to state 64
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73

    LE        [reduce using rule 38 (expression)]
    '@'       [reduce using rule 38 (expression)]
    '.'       [reduce using rule 38 (expression)]
    '+'       [reduce using rule 38 (expression)]
    '-'       [reduce using rule 38 (expression)]
    '*'       [reduce using rule 38 (expression)]
    '/'       [reduce using rule 38 (expression)]
    '<'       [reduce using rule 38 (expression)]
    '='       [reduce using rule 38 (expression)]
    $default  reduce using rule 38 (expression)


state 57

   27 expression: OBJECTID ASSIGN . expression

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 79


state 58

   30 expression: OBJECTID '(' . expression_list_comma ')'

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    $default  reduce using rule 19 (expression_list_comma)

    expression_list_comma  go to state 80
    expression             go to state 81


state 59

   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression
   47           | NOT expression .

    LE   shift, and go to state 64
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73

    LE        [reduce using rule 47 (expression)]
    '@'       [reduce using rule 47 (expression)]
    '.'       [reduce using rule 47 (expression)]
    '+'       [reduce using rule 47 (expression)]
    '-'       [reduce using rule 47 (expression)]
    '*'       [reduce using rule 47 (expression)]
    '/'       [reduce using rule 47 (expression)]
    '<'       [reduce using rule 47 (expression)]
    '='       [reduce using rule 47 (expression)]
    $default  reduce using rule 47 (expression)


state 60

   23 expression_list_semicolon: expression_list_semicolon . expression ';'
   33 expression: '{' expression_list_semicolon . '}'

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '}'         shift, and go to state 82
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 83


state 61

   22 expression_list_semicolon: expression . ';'
   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    LE   shift, and go to state 64
    ';'  shift, and go to state 84
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73


state 62

   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression
   48           | '(' expression . ')'

    LE   shift, and go to state 64
    ')'  shift, and go to state 85
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73


state 63

   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   43           | '~' expression .
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    LE   shift, and go to state 64
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73

    LE        [reduce using rule 43 (expression)]
    '@'       [reduce using rule 43 (expression)]
    '.'       [reduce using rule 43 (expression)]
    '+'       [reduce using rule 43 (expression)]
    '-'       [reduce using rule 43 (expression)]
    '*'       [reduce using rule 43 (expression)]
    '/'       [reduce using rule 43 (expression)]
    '<'       [reduce using rule 43 (expression)]
    '='       [reduce using rule 43 (expression)]
    $default  reduce using rule 43 (expression)


state 64

   45 expression: expression LE . expression

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 86


state 65

   11 feature: OBJECTID ':' TYPEID ASSIGN expression ';' .

    $default  reduce using rule 11 (feature)


state 66

   28 expression: expression '@' . TYPEID '.' OBJECTID '(' expression_list_comma ')'

    TYPEID  shift, and go to state 87


state 67

   29 expression: expression '.' . OBJECTID '(' expression_list_comma ')'

    OBJECTID  shift, and go to state 88


state 68

   39 expression: expression '+' . expression

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 89


state 69

   40 expression: expression '-' . expression

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 90


state 70

   41 expression: expression '*' . expression

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 91


state 71

   42 expression: expression '/' . expression

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 92


state 72

   44 expression: expression '<' . expression

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 93


state 73

   46 expression: expression '=' . expression

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 94


state 74

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expression '}' ';'

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 95


state 75

   31 expression: IF expression THEN . expression ELSE expression FI

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 96


state 76

   34 expression: LET OBJECTID ':' . TYPEID partial_let
   35           | LET OBJECTID ':' . TYPEID ASSIGN expression partial_let

    TYPEID  shift, and go to state 97


state 77

   32 expression: WHILE expression LOOP . expression POOL

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 98


state 78

   36 expression: CASE expression OF . case_list ESAC

    OBJECTID  shift, and go to state 99

    case_list  go to state 100
    case       go to state 101


state 79

   27 expression: OBJECTID ASSIGN expression .
   28           | expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    LE   shift, and go to state 64
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73

    LE        [reduce using rule 27 (expression)]
    '@'       [reduce using rule 27 (expression)]
    '.'       [reduce using rule 27 (expression)]
    '+'       [reduce using rule 27 (expression)]
    '-'       [reduce using rule 27 (expression)]
    '*'       [reduce using rule 27 (expression)]
    '/'       [reduce using rule 27 (expression)]
    '<'       [reduce using rule 27 (expression)]
    '='       [reduce using rule 27 (expression)]
    $default  reduce using rule 27 (expression)


state 80

   21 expression_list_comma: expression_list_comma . ',' expression
   30 expression: OBJECTID '(' expression_list_comma . ')'

    ')'  shift, and go to state 102
    ','  shift, and go to state 103


state 81

   20 expression_list_comma: expression .
   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    LE   shift, and go to state 64
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73

    $default  reduce using rule 20 (expression_list_comma)


state 82

   33 expression: '{' expression_list_semicolon '}' .

    $default  reduce using rule 33 (expression)


state 83

   23 expression_list_semicolon: expression_list_semicolon expression . ';'
   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    LE   shift, and go to state 64
    ';'  shift, and go to state 104
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73


state 84

   22 expression_list_semicolon: expression ';' .

    $default  reduce using rule 22 (expression_list_semicolon)


state 85

   48 expression: '(' expression ')' .

    $default  reduce using rule 48 (expression)


state 86

   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   45           | expression LE expression .
   46           | expression . '=' expression

    LE   shift, and go to state 64
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73

    LE        [reduce using rule 45 (expression)]
    '@'       [reduce using rule 45 (expression)]
    '.'       [reduce using rule 45 (expression)]
    '+'       [reduce using rule 45 (expression)]
    '-'       [reduce using rule 45 (expression)]
    '*'       [reduce using rule 45 (expression)]
    '/'       [reduce using rule 45 (expression)]
    '<'       [reduce using rule 45 (expression)]
    '='       [reduce using rule 45 (expression)]
    $default  reduce using rule 45 (expression)


state 87

   28 expression: expression '@' TYPEID . '.' OBJECTID '(' expression_list_comma ')'

    '.'  shift, and go to state 105


state 88

   29 expression: expression '.' OBJECTID . '(' expression_list_comma ')'

    '('  shift, and go to state 106


state 89

   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   39           | expression '+' expression .
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    LE   shift, and go to state 64
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73

    LE        [reduce using rule 39 (expression)]
    '@'       [reduce using rule 39 (expression)]
    '.'       [reduce using rule 39 (expression)]
    '+'       [reduce using rule 39 (expression)]
    '-'       [reduce using rule 39 (expression)]
    '*'       [reduce using rule 39 (expression)]
    '/'       [reduce using rule 39 (expression)]
    '<'       [reduce using rule 39 (expression)]
    '='       [reduce using rule 39 (expression)]
    $default  reduce using rule 39 (expression)


state 90

   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   40           | expression '-' expression .
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    LE   shift, and go to state 64
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73

    LE        [reduce using rule 40 (expression)]
    '@'       [reduce using rule 40 (expression)]
    '.'       [reduce using rule 40 (expression)]
    '+'       [reduce using rule 40 (expression)]
    '-'       [reduce using rule 40 (expression)]
    '*'       [reduce using rule 40 (expression)]
    '/'       [reduce using rule 40 (expression)]
    '<'       [reduce using rule 40 (expression)]
    '='       [reduce using rule 40 (expression)]
    $default  reduce using rule 40 (expression)


state 91

   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   41           | expression '*' expression .
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    LE   shift, and go to state 64
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73

    LE        [reduce using rule 41 (expression)]
    '@'       [reduce using rule 41 (expression)]
    '.'       [reduce using rule 41 (expression)]
    '+'       [reduce using rule 41 (expression)]
    '-'       [reduce using rule 41 (expression)]
    '*'       [reduce using rule 41 (expression)]
    '/'       [reduce using rule 41 (expression)]
    '<'       [reduce using rule 41 (expression)]
    '='       [reduce using rule 41 (expression)]
    $default  reduce using rule 41 (expression)


state 92

   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   42           | expression '/' expression .
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    LE   shift, and go to state 64
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73

    LE        [reduce using rule 42 (expression)]
    '@'       [reduce using rule 42 (expression)]
    '.'       [reduce using rule 42 (expression)]
    '+'       [reduce using rule 42 (expression)]
    '-'       [reduce using rule 42 (expression)]
    '*'       [reduce using rule 42 (expression)]
    '/'       [reduce using rule 42 (expression)]
    '<'       [reduce using rule 42 (expression)]
    '='       [reduce using rule 42 (expression)]
    $default  reduce using rule 42 (expression)


state 93

   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   44           | expression '<' expression .
   45           | expression . LE expression
   46           | expression . '=' expression

    LE   shift, and go to state 64
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73

    LE        [reduce using rule 44 (expression)]
    '@'       [reduce using rule 44 (expression)]
    '.'       [reduce using rule 44 (expression)]
    '+'       [reduce using rule 44 (expression)]
    '-'       [reduce using rule 44 (expression)]
    '*'       [reduce using rule 44 (expression)]
    '/'       [reduce using rule 44 (expression)]
    '<'       [reduce using rule 44 (expression)]
    '='       [reduce using rule 44 (expression)]
    $default  reduce using rule 44 (expression)


state 94

   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression
   46           | expression '=' expression .

    LE   shift, and go to state 64
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73

    LE        [reduce using rule 46 (expression)]
    '@'       [reduce using rule 46 (expression)]
    '.'       [reduce using rule 46 (expression)]
    '+'       [reduce using rule 46 (expression)]
    '-'       [reduce using rule 46 (expression)]
    '*'       [reduce using rule 46 (expression)]
    '/'       [reduce using rule 46 (expression)]
    '<'       [reduce using rule 46 (expression)]
    '='       [reduce using rule 46 (expression)]
    $default  reduce using rule 46 (expression)


state 95

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression . '}' ';'
   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    LE   shift, and go to state 64
    '}'  shift, and go to state 107
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73


state 96

   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   31           | IF expression THEN expression . ELSE expression FI
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    ELSE  shift, and go to state 108
    LE    shift, and go to state 64
    '@'   shift, and go to state 66
    '.'   shift, and go to state 67
    '+'   shift, and go to state 68
    '-'   shift, and go to state 69
    '*'   shift, and go to state 70
    '/'   shift, and go to state 71
    '<'   shift, and go to state 72
    '='   shift, and go to state 73


state 97

   34 expression: LET OBJECTID ':' TYPEID . partial_let
   35           | LET OBJECTID ':' TYPEID . ASSIGN expression partial_let

    IN      shift, and go to state 109
    ASSIGN  shift, and go to state 110
    ','     shift, and go to state 111

    partial_let  go to state 112


state 98

   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   32           | WHILE expression LOOP expression . POOL
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    POOL  shift, and go to state 113
    LE    shift, and go to state 64
    '@'   shift, and go to state 66
    '.'   shift, and go to state 67
    '+'   shift, and go to state 68
    '-'   shift, and go to state 69
    '*'   shift, and go to state 70
    '/'   shift, and go to state 71
    '<'   shift, and go to state 72
    '='   shift, and go to state 73


state 99

   18 case: OBJECTID . ':' TYPEID DARROW expression ';'

    ':'  shift, and go to state 114


state 100

   17 case_list: case_list . case
   36 expression: CASE expression OF case_list . ESAC

    ESAC      shift, and go to state 115
    OBJECTID  shift, and go to state 99

    case  go to state 116


state 101

   16 case_list: case .

    $default  reduce using rule 16 (case_list)


state 102

   30 expression: OBJECTID '(' expression_list_comma ')' .

    $default  reduce using rule 30 (expression)


state 103

   21 expression_list_comma: expression_list_comma ',' . expression

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 117


state 104

   23 expression_list_semicolon: expression_list_semicolon expression ';' .

    $default  reduce using rule 23 (expression_list_semicolon)


state 105

   28 expression: expression '@' TYPEID '.' . OBJECTID '(' expression_list_comma ')'

    OBJECTID  shift, and go to state 118


state 106

   29 expression: expression '.' OBJECTID '(' . expression_list_comma ')'

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    $default  reduce using rule 19 (expression_list_comma)

    expression_list_comma  go to state 119
    expression             go to state 81


state 107

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' . ';'

    ';'  shift, and go to state 120


state 108

   31 expression: IF expression THEN expression ELSE . expression FI

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 121


state 109

   24 partial_let: IN . expression

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 122


state 110

   35 expression: LET OBJECTID ':' TYPEID ASSIGN . expression partial_let

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 123


state 111

   25 partial_let: ',' . OBJECTID ':' TYPEID partial_let
   26            | ',' . OBJECTID ':' TYPEID ASSIGN expression partial_let

    OBJECTID  shift, and go to state 124


state 112

   34 expression: LET OBJECTID ':' TYPEID partial_let .

    $default  reduce using rule 34 (expression)


state 113

   32 expression: WHILE expression LOOP expression POOL .

    $default  reduce using rule 32 (expression)


state 114

   18 case: OBJECTID ':' . TYPEID DARROW expression ';'

    TYPEID  shift, and go to state 125


state 115

   36 expression: CASE expression OF case_list ESAC .

    $default  reduce using rule 36 (expression)


state 116

   17 case_list: case_list case .

    $default  reduce using rule 17 (case_list)


state 117

   21 expression_list_comma: expression_list_comma ',' expression .
   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    LE   shift, and go to state 64
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73

    $default  reduce using rule 21 (expression_list_comma)


state 118

   28 expression: expression '@' TYPEID '.' OBJECTID . '(' expression_list_comma ')'

    '('  shift, and go to state 126


state 119

   21 expression_list_comma: expression_list_comma . ',' expression
   29 expression: expression '.' OBJECTID '(' expression_list_comma . ')'

    ')'  shift, and go to state 127
    ','  shift, and go to state 103


state 120

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' ';' .

    $default  reduce using rule 9 (feature)


state 121

   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   31           | IF expression THEN expression ELSE expression . FI
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    FI   shift, and go to state 128
    LE   shift, and go to state 64
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73


state 122

   24 partial_let: IN expression .
   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    LE   shift, and go to state 64
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73

    LE        [reduce using rule 24 (partial_let)]
    '@'       [reduce using rule 24 (partial_let)]
    '.'       [reduce using rule 24 (partial_let)]
    '+'       [reduce using rule 24 (partial_let)]
    '-'       [reduce using rule 24 (partial_let)]
    '*'       [reduce using rule 24 (partial_let)]
    '/'       [reduce using rule 24 (partial_let)]
    '<'       [reduce using rule 24 (partial_let)]
    '='       [reduce using rule 24 (partial_let)]
    $default  reduce using rule 24 (partial_let)


state 123

   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   35           | LET OBJECTID ':' TYPEID ASSIGN expression . partial_let
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    IN   shift, and go to state 109
    LE   shift, and go to state 64
    ','  shift, and go to state 111
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73

    partial_let  go to state 129


state 124

   25 partial_let: ',' OBJECTID . ':' TYPEID partial_let
   26            | ',' OBJECTID . ':' TYPEID ASSIGN expression partial_let

    ':'  shift, and go to state 130


state 125

   18 case: OBJECTID ':' TYPEID . DARROW expression ';'

    DARROW  shift, and go to state 131


state 126

   28 expression: expression '@' TYPEID '.' OBJECTID '(' . expression_list_comma ')'

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    $default  reduce using rule 19 (expression_list_comma)

    expression_list_comma  go to state 132
    expression             go to state 81


state 127

   29 expression: expression '.' OBJECTID '(' expression_list_comma ')' .

    $default  reduce using rule 29 (expression)


state 128

   31 expression: IF expression THEN expression ELSE expression FI .

    $default  reduce using rule 31 (expression)


state 129

   35 expression: LET OBJECTID ':' TYPEID ASSIGN expression partial_let .

    $default  reduce using rule 35 (expression)


state 130

   25 partial_let: ',' OBJECTID ':' . TYPEID partial_let
   26            | ',' OBJECTID ':' . TYPEID ASSIGN expression partial_let

    TYPEID  shift, and go to state 133


state 131

   18 case: OBJECTID ':' TYPEID DARROW . expression ';'

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 134


state 132

   21 expression_list_comma: expression_list_comma . ',' expression
   28 expression: expression '@' TYPEID '.' OBJECTID '(' expression_list_comma . ')'

    ')'  shift, and go to state 135
    ','  shift, and go to state 103


state 133

   25 partial_let: ',' OBJECTID ':' TYPEID . partial_let
   26            | ',' OBJECTID ':' TYPEID . ASSIGN expression partial_let

    IN      shift, and go to state 109
    ASSIGN  shift, and go to state 136
    ','     shift, and go to state 111

    partial_let  go to state 137


state 134

   18 case: OBJECTID ':' TYPEID DARROW expression . ';'
   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    LE   shift, and go to state 64
    ';'  shift, and go to state 138
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73


state 135

   28 expression: expression '@' TYPEID '.' OBJECTID '(' expression_list_comma ')' .

    $default  reduce using rule 28 (expression)


state 136

   26 partial_let: ',' OBJECTID ':' TYPEID ASSIGN . expression partial_let

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expression  go to state 139


state 137

   25 partial_let: ',' OBJECTID ':' TYPEID partial_let .

    $default  reduce using rule 25 (partial_let)


state 138

   18 case: OBJECTID ':' TYPEID DARROW expression ';' .

    $default  reduce using rule 18 (case)


state 139

   26 partial_let: ',' OBJECTID ':' TYPEID ASSIGN expression . partial_let
   28 expression: expression . '@' TYPEID '.' OBJECTID '(' expression_list_comma ')'
   29           | expression . '.' OBJECTID '(' expression_list_comma ')'
   39           | expression . '+' expression
   40           | expression . '-' expression
   41           | expression . '*' expression
   42           | expression . '/' expression
   44           | expression . '<' expression
   45           | expression . LE expression
   46           | expression . '=' expression

    IN   shift, and go to state 109
    LE   shift, and go to state 64
    ','  shift, and go to state 111
    '@'  shift, and go to state 66
    '.'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '<'  shift, and go to state 72
    '='  shift, and go to state 73

    partial_let  go to state 140


state 140

   26 partial_let: ',' OBJECTID ':' TYPEID ASSIGN expression partial_let .

    $default  reduce using rule 26 (partial_let)
